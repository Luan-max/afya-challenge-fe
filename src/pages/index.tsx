import Head from "next/head";
import Layout from "@/components/ui/Layout";
import Table from "@/components/ui/Table";
import { apiClient } from "./api/api";
import { useState, Fragment, FormEvent } from "react";
import Input from "@/components/ui/Input";
import { Dialog, Transition } from "@headlessui/react";
import Router from "next/router";

type Patient = {
  id: number;
  name: string;
  phone: string;
  email: string;
  birthday: string;
  gender: string;
  height: string;
  weight: string;
  createdAt: string;
  updatedAt: string;
};

interface PatientProps {
  patients: Patient[];
}

export default function Home({ patients }: PatientProps) {
  const api = apiClient();

  const [list, setPatients] = useState(patients || []);

  const [email, setEmail] = useState("");
  const [name, setName] = useState("");
  const [birthday, setBirthday] = useState();
  const [phone, setPhone] = useState("");
  const [weight, setWeight] = useState("");
  const [height, setHeight] = useState("");
  const [gender, setGender] = useState("");

  let [isOpen, setIsOpen] = useState(false);
  function closeModal() {
    setIsOpen(false);
  }

  function openModal(event: FormEvent) {
    setIsOpen(true);
  }

  async function submit() {
    try {
      const data = {
        email,
        phone,
        name,
        gender: gender === "Masculino" ? "masculine" : "feminine",
        birthday,
        weight,
        height,
      };

      await api.post("/patients", {
        ...data,
      });
      setIsOpen(false);

      window.location.reload();
    } catch {}
  }

  return (
    <>
      <Head>
        <title>Pacientes</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout title="Pacientes" subtitle="Pacientes da Afya">
        <div className="flex justify-end">
          <button
            type="button"
            onClick={openModal}
            className="flex flex-end mb-5 text-white bg-pink-600 hover:bg-pink-800 focus:ring-4 focus:outline-none focus:ring-pink-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center mr-2"
          >
            Novo Paciente
          </button>

          <Transition appear show={isOpen} as={Fragment}>
            <Dialog as="div" className="relative z-10" onClose={closeModal}>
              <Transition.Child
                as={Fragment}
                enter="ease-out duration-300"
                enterFrom="opacity-0"
                enterTo="opacity-100"
                leave="ease-in duration-200"
                leaveFrom="opacity-100"
                leaveTo="opacity-0"
              >
                <div className="fixed inset-0 bg-black bg-opacity-25" />
              </Transition.Child>

              <div className="fixed inset-0 overflow-y-auto">
                <div className="flex min-h-full items-center justify-center p-4 text-center">
                  <Transition.Child
                    as={Fragment}
                    enter="ease-out duration-300"
                    enterFrom="opacity-0 scale-95"
                    enterTo="opacity-100 scale-100"
                    leave="ease-in duration-200"
                    leaveFrom="opacity-100 scale-100"
                    leaveTo="opacity-0 scale-95"
                  >
                    <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all">
                      <Dialog.Title
                        as="h5"
                        className="text-lg font-medium leading-6 text-gray-900"
                      >
                        Novo paciente
                      </Dialog.Title>
                      <div className="mt-6">
                        <Input
                          type="text"
                          label="Nome"
                          placeholder="John"
                          value={name}
                          valueChange={setName}
                          required
                        />
                      </div>

                      <div className="mt-6">
                        <Input
                          type="text"
                          label="Email"
                          placeholder="@email.com"
                          value={email}
                          valueChange={setEmail}
                          required
                        />
                      </div>
                      <div className="mt-6">
                        <Input
                          type="text"
                          label="Telefone"
                          placeholder="+5511963500521"
                          value={phone}
                          valueChange={setPhone}
                          required
                        />
                      </div>
                      <div className="mt-6">
                        <Input
                          type="text"
                          label="Genêro"
                          placeholder="Masculino"
                          value={gender}
                          valueChange={setGender}
                          required
                        />
                      </div>
                      <div className="mt-6">
                        <Input
                          type="text"
                          label="Data de Nascimento"
                          placeholder="2002-11-27"
                          value={birthday}
                          valueChange={setBirthday}
                          required
                        />
                      </div>

                      <div className="mt-6">
                        <Input
                          type="text"
                          label="Peso"
                          placeholder="40"
                          value={weight}
                          valueChange={setWeight}
                          required
                        />
                      </div>

                      <div className="mt-6">
                        <Input
                          type="text"
                          label="Altura"
                          placeholder="20"
                          value={height}
                          valueChange={setHeight}
                          required
                        />
                      </div>
                      <div className="mt-6">
                        <button
                          type="button"
                          className="rounded-md border border-transparent bg-pink-100 px-4 py-2 text-sm font-medium text-pink-600 hover:bg-pink-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-pink-500 focus-visible:ring-offset-2"
                          onClick={submit}
                        >
                          Avançar
                        </button>
                      </div>
                    </Dialog.Panel>
                  </Transition.Child>
                </div>
              </div>
            </Dialog>
          </Transition>
        </div>
        <div>
          <Table
            props={
              <tr>
                <th scope="col" className="px-6 py-3">
                  Nome
                </th>
                <th scope="col" className="px-6 py-3">
                  Data de Nascimento
                </th>
                <th scope="col" className="px-6 py-3">
                  Sexo
                </th>
                <th scope="col" className="px-6 py-3">
                  Telefone
                </th>
              </tr>
            }
            data={list.map((patient, index) => (
              <tr
                className="bg-white border-b dark:bg-gray-900 dark:border-gray-700"
                key={index}
              >
                <td
                  scope="row"
                  className="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white"
                >
                  {patient.name}
                </td>
                <td className="px-6 py-4">{patient.birthday}</td>
                <td className="px-6 py-4">
                  {patient.gender === "masculine" ? "Masculino" : "Feminino"}
                </td>
                <td className="px-6 py-4">{patient.phone}</td>
              </tr>
            ))}
          />
        </div>
      </Layout>
    </>
  );
}

export const getServerSideProps = async () => {
  const api = apiClient();

  const patients = await api.get("patients");

  return {
    props: {
      patients,
    },
  };
};
